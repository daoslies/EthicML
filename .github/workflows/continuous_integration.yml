name: EthicML CI

on:
  pull_request:
    branches:
    - master
    paths-ignore:
    - 'docs/**'
    - 'docsource/**'
    - 'examples/**'
    - '**/*.md'
    - .gitignore
    - CODEOWNERS
    - LICENSE

jobs:
  test_with_pytest:

    runs-on: ubuntu-latest
    env:
      POETRY_VIRTUALENVS_CREATE: false

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Set up Poetry cache for Python dependencies
      uses: actions/cache@v2
      if: startsWith(runner.os, 'Linux')
      with:
        path: ~/.cache/pypoetry
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: ${{ runner.os }}-poetry-
    - name: Install Poetry
      run: |
        curl -fsSL -o get-poetry.py https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py
        python get-poetry.py -y
        echo "$HOME/.poetry/bin" >> $GITHUB_PATH
        rm get-poetry.py
    - name: Install dependencies
      run: |
        poetry install -E ci --no-dev --no-interaction
    - name: Test with pytest
      run: |
        python -m pytest -vv --cov=ethicml --cov-fail-under=80  tests/

  lint_with_pylint:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install pylint
      run: |
        python -m pip install --upgrade pip
        pip install pylint
    - name: Lint with pylint
      run: |
        python run_pylint.py
        python run_pylint_tests.py

  format_with_black_and_isort:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install black
      run: |
        python -m pip install --upgrade pip
        pip install black isort
    - name: Format with black
      run: |
        python -m black --check -l 100 -t py37 -S ethicml/
        python -m black --check -l 100 -t py37 -S tests/
    - name: Format with isort
      run: |
        isort . --check --diff

  type_check_with_mypy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install mypy
      run: |
        python -m pip install --upgrade pip
        pip install mypy
        pip install git+https://github.com/predictive-analytics-lab/python-type-stubs.git
        pip install typed-argument-parser==1.4 teext numpy>=1.20.1 palkit
    - name: Type check with mypy
      run: |
        python run_mypy.py
        python run_mypy_tests.py

  check_docstrings:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Install pydocstyle
      run: |
        python -m pip install --upgrade pip
        pip install pydocstyle
    - name: Check docstrings with pydocstyle
      run: |
        pydocstyle --count -e ethicml
